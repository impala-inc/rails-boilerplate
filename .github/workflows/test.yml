---
name: Rails CI

"on":
  push:
    branches: [main, staging, production, "*/develop"]
  pull_request:
    branches: [main, staging, production]

env:
  RUBY_VERSION: 3.2.0
  POSTGRES_DB: test_db
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Setup database
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db
        run: |
          # Gemfileが存在する場合（通常のRailsアプリ）
          if [ -f "Gemfile" ]; then
            bundle exec rails db:create
            bundle exec rails db:migrate
          else
            echo "No Gemfile found, skipping database setup"
          fi

      - name: Run RSpec tests
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db
        run: |
          if [ -f "spec/rails_helper.rb" ]; then
            bundle exec rspec
          else
            echo "No RSpec tests found, skipping..."
          fi

      - name: Run Rails tests
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db
        run: |
          if [ -d "test" ]; then
            bundle exec rails test
          else
            echo "No Rails tests found, skipping..."
          fi

      - name: Run security audit
        run: |
          if [ -f "Gemfile" ] && bundle list | grep -q bundler-audit; then
            bundle exec bundler-audit --update
          else
            echo "bundler-audit not available, skipping security audit..."
          fi

      - name: Run Rubocop
        run: |
          if [ -f "Gemfile" ] && bundle list | grep -q rubocop; then
            bundle exec rubocop
          else
            echo "Rubocop not available, skipping style check..."
          fi

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Lint Dockerfiles
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: docker/app/Dockerfile.dev

      - name: Lint YAML files
        uses: ibiqlik/action-yamllint@v3
        with:
          file_or_dir: .github/workflows
          format: parsable

      - name: Check shell scripts
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck
          find . -name "*.sh" -exec shellcheck {} \;