name: Docker Build Test

on:
  push:
    branches: [main, staging, production, "*/develop"]
  pull_request:
    branches: [main, staging, production]

jobs:
  docker-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mode: [api, fullstack]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/app/Dockerfile.dev
          push: false
          tags: rails-boilerplate:test-${{ matrix.mode }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker Compose
        env:
          RAILS_MODE: ${{ matrix.mode }}
        run: |
          # Docker Composeでサービスを起動
          docker-compose up -d
          
          # Railsアプリが起動するまで待機
          timeout=300
          while ! docker-compose exec -T app curl -f http://localhost:3000/health 2>/dev/null; do
            if [ $timeout -le 0 ]; then
              echo "Timeout waiting for Rails app to start"
              docker-compose logs app
              exit 1
            fi
            sleep 5
            timeout=$((timeout - 5))
          done
          
          echo "Rails app started successfully in ${{ matrix.mode }} mode"
          
          # ログを確認
          docker-compose logs app
          
          # クリーンアップ
          docker-compose down -v

  security-scan:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'